name: CI Windows - Build Raylib Project

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Cloner le dépôt
        uses: actions/checkout@v3

      - name: Installer Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

      - name: Installer MinGW-w64 via Chocolatey
        run: choco install mingw -y

      - name: Ajouter MinGW au PATH
        run: |
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Vérifier GCC
        run: gcc --version

      - name: Cloner et compiler Raylib
        run: |
          git clone https://github.com/raysan5/raylib.git
          cd raylib
          mkdir build
          cd build
          cmake .. -G "MinGW Makefiles"
          cmake --build .
          cmake --install . --prefix "${{ github.workspace }}/raylib"

      - name: Configurer le projet
        run: |
          cmake -B build -G "MinGW Makefiles" `
            -DCMAKE_PREFIX_PATH="${{ github.workspace }}/raylib" `
            -DCMAKE_BUILD_TYPE=Release

      - name: Compiler le projet
        run: cmake --build build --config Release

      - name: Vérifier l'exécutable
        run: |
          if (Test-Path "build/raylib_modular.exe") {
            Write-Output "L'exécutable est présent."
          } else {
            Write-Error "L'exécutable est manquant."
            exit 1
          }
